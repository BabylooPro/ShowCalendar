name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request: # EXECUTE ON PULL REQUESTS
    types: [opened, synchronize, reopened]
jobs:
  build_and_analyze:
    # BUILD AND ANALYZE THE PROJECT
    name: Build and Analyze
    runs-on: windows-latest
    steps:
      # CHECKOUT THE REPOSITORY
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # INSTALL SONARCLOUD SCANNER
      - name: Install SonarCloud scanner
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # BEGIN SONARCLOUD ANALYSIS
      - name: Begin SonarCloud analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"MaxRemyDev_ShowCalendar" /o:"maxremydev" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="./TestResults/Coverage/Reports/Cobertura.xml"

      # BUILD THE PROJECT
      - name: Build the project
        shell: powershell
        run: dotnet build Backend/Backend.sln

      # TEST AND COLLECT COVERAGE
      - name: Test and collect coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          dotnet test Backend/Backend.sln --no-build --logger "trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/Coverage/
          reportgenerator -reports:./TestResults/Coverage/*.cobertura.xml -targetdir:./TestResults/Coverage/Reports -reporttypes:"HtmlInline_AzurePipelines;Cobertura"

      # END SONARCLOUD ANALYSIS
      - name: End SonarCloud analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
